### Turtle Start ###
@prefix rr: <http://www.w3.org/ns/r2rml#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#>.
@prefix owl: <http://www.w3.org/2002/07/owl#>.
@prefix schema: <http://schema.org/>
@prefix oplcb: <http://www.openlinksw.com/schemas/crunchbase#>.
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix void: <http://rdfs.org/ns/void#> .
@prefix scovo: <http://purl.org/NET/scovo#> .
@prefix aowl: <http://bblfish.net/work/atom-owl/2006-06-06/> .

#Acquisitions.csv
<#TriplesMapacquisitions> a rr:TriplesMap; rr:logicalTable [ rr:sqlQuery """SELECT *, uuid as cb_uuid FROM crunchbase.demo.acquisitions""" ]; 
rr:subjectMap [ rr:termType rr:IRI  ; rr:template "http://demo.openlinksw.com/crunchbase/acquisition/{cb_uuid}#this"; rr:class oplcb:Acquisition; rr:graph <http://demo.openlinksw.com/crunchbase_demo#> ];
rr:predicateObjectMap [ rr:predicateMap [ rr:constant rdfs:label ] ; rr:objectMap [ rr:column "name" ]; ] ;
rr:predicateObjectMap [ rr:predicateMap [ rr:constant schema:mainEntityOfPage ] ; rr:objectMap [ rr:termType rr:IRI; rr:template "http://wwww.crunchbase.com/acquisition/{permalink}" ]; ] ;
rr:predicateObjectMap [ rr:predicateMap [ rr:constant oplcb:hasRank ] ; rr:objectMap [ rr:column "rank" ]; ] ;
rr:predicateObjectMap [ rr:predicateMap [ rr:constant oplcb:createdAt ] ; rr:objectMap [ rr:column "created_at" ]; ] ;
rr:predicateObjectMap [ rr:predicateMap [ rr:constant oplcb:updatedAt ] ; rr:objectMap [ rr:column "updated_at" ]; ] ;
rr:predicateObjectMap [ rr:predicateMap [ rr:constant oplcb:hasAcquiree ] ; rr:objectMap [ rr:termType rr:IRI; rr:template "http://demo.openlinksw.com/crunchbase/organization/{acquiree_uuid}#this" ]; ] ;
rr:predicateObjectMap [ rr:predicateMap [ rr:constant oplcb:hasAcquirer ] ; rr:objectMap [ rr:termType rr:IRI; rr:template "http://demo.openlinksw.com/crunchbase/organization/{acquirer_uuid}#this" ]; ] ;
rr:predicateObjectMap [ rr:predicateMap [ rr:constant oplcb:acquisition_type ] ; rr:objectMap [ rr:termType rr:IRI; rr:template "http://www.openlinksw.com/schemas/crunchbase#{acquisition_type}" ]; ] ;
rr:predicateObjectMap [ rr:predicateMap [ rr:constant oplcb:hasAcquisitionDate ] ; rr:objectMap [ rr:column "acquired_on" ]; ] ;
rr:predicateObjectMap [ rr:predicateMap [ rr:constant oplcb:hasPriceAmount ] ; rr:objectMap [ rr:column "price_usd" ]; ] ;
rr:predicateObjectMap [ rr:predicateMap [ rr:constant oplcb:hasPriceCurrencyCode ] ; rr:objectMap [ rr:column "price_currency_code" ]; ] .

<#TriplesMapAcquiree> a rr:TriplesMap; rr:logicalTable [ rr:sqlQuery """SELECT *, CAST( regexp_replace(acquiree_cb_url,'.*organization//','') as VARCHAR  ) as acquiree_permalink FROM crunchbase..acquisitions""" ]; 
rr:subjectMap [ rr:termType rr:IRI  ; rr:template "http://demo.openlinksw.com/crunchbase/organization/{acquiree_uuid}#this"; rr:class oplcb:Organization; rr:graph <http://demo.openlinksw.com/crunchbase_demo#> ];
rr:predicateObjectMap [ rr:predicateMap [ rr:constant rdfs:label ] ; rr:objectMap [ rr:column "acquiree_name" ]; ] ; 
rr:predicateObjectMap [ rr:predicateMap [ rr:constant schema:mainEntityOfPage ] ; rr:objectMap [ rr:termType rr:IRI; rr:template "http://www.crunchbase.com/organization/{acquiree_permalink}" ]; ] ;
rr:predicateObjectMap [ rr:predicateMap [ rr:constant oplcb:hasAcquireeCountryCode ] ; rr:objectMap [ rr:termType rr:IRI; rr:template "http://demo.openlinksw.com/crunchbase/country/{acquiree_country_code}#this" ]; ] ;
rr:predicateObjectMap [ rr:predicateMap [ rr:constant oplcb:hasAcquireeStateCode ] ; rr:objectMap [ rr:termType rr:IRI; rr:template "http://demo.openlinksw.com/crunchbase/state/{acquiree_state_code}#this" ]; ] ;
rr:predicateObjectMap [ rr:predicateMap [ rr:constant oplcb:hasAcquireeRegion ] ; rr:objectMap [ rr:termType rr:IRI; rr:template "http://demo.openlinksw.com/crunchbase/region/{acquiree_region}#this" ]; ] ;
rr:predicateObjectMap [ rr:predicateMap [ rr:constant oplcb:hasAcquireeCity ] ; rr:objectMap [ rr:termType rr:IRI; rr:template "http://demo.openlinksw.com/crunchbase/region/{acquiree_city}#this" ]; ] .

<#TriplesMapAcquirer> a rr:TriplesMap; rr:logicalTable [ rr:sqlQuery """SELECT *, CAST( regexp_replace(acquirer_cb_url,'.*organization//','') as VARCHAR  ) as acquirer_permalink FROM crunchbase..acquisitions""" ]; 
rr:subjectMap [ rr:termType rr:IRI  ; rr:template "http://demo.openlinksw.com/crunchbase/organization/{acquirer_uuid}#this"; rr:class oplcb:Organization; rr:graph <http://demo.openlinksw.com/crunchbase_demo#> ];
rr:predicateObjectMap [ rr:predicateMap [ rr:constant rdfs:label ] ; rr:objectMap [ rr:column "acquiree_name" ]; ] ;
rr:predicateObjectMap [ rr:predicateMap [ rr:constant schema:mainEntityOfPage ] ; rr:objectMap [ rr:termType rr:IRI; rr:template "http://www.crunchbase.com/organization/{acquirer_permalink}" ]; ] ;
rr:predicateObjectMap [ rr:predicateMap [ rr:constant oplcb:hasAcquireeCountryCode ] ; rr:objectMap [ rr:termType rr:IRI; rr:template "http://demo.openlinksw.com/crunchbase/country/{acquirer_country_code}#this" ]; ] ;
rr:predicateObjectMap [ rr:predicateMap [ rr:constant oplcb:hasAcquireeStateCode ] ; rr:objectMap [ rr:termType rr:IRI; rr:template "http://demo.openlinksw.com/crunchbase/state/{acquirer_state_code}#this" ]; ] ;
rr:predicateObjectMap [ rr:predicateMap [ rr:constant oplcb:hasAcquireeRegion ] ; rr:objectMap [ rr:termType rr:IRI; rr:template "http://demo.openlinksw.com/crunchbase/region/{acquirer_region}#this" ]; ] ;
rr:predicateObjectMap [ rr:predicateMap [ rr:constant oplcb:hasAcquireeCity ] ; rr:objectMap [ rr:termType rr:IRI; rr:template "http://demo.openlinksw.com/crunchbase/region/{acquirer_city}#this" ]; ] .

#Category_groups.csv
<#TriplesMapcategory_groups> a rr:TriplesMap; rr:logicalTable [ rr:sqlQuery """SELECT *, uuid as cb_uuid FROM crunchbase.demo.category_groups""" ]; 
rr:subjectMap [ rr:termType rr:IRI  ; rr:template "http://demo.openlinksw.com/crunchbase/category/{cb_uuid}#this"; rr:class oplcb:Category; rr:graph <http://demo.openlinksw.com/crunchbase_demo#> ];
rr:predicateObjectMap [ rr:predicateMap [ rr:constant rdfs:label ] ; rr:objectMap [ rr:column "name" ]; ] ;
rr:predicateObjectMap [ rr:predicateMap [ rr:constant schema:mainEntityOfPage ] ; rr:objectMap [ rr:termType rr:IRI; rr:template "http://www.crunchbase.com/category/{permalink}" ]; ] ;
rr:predicateObjectMap [ rr:predicateMap [ rr:constant oplcb:hasRank ] ; rr:objectMap [ rr:column "rank" ]; ] ;
rr:predicateObjectMap [ rr:predicateMap [ rr:constant oplcb:createdAt ] ; rr:objectMap [ rr:column "created_at" ]; ] ;
rr:predicateObjectMap [ rr:predicateMap [ rr:constant oplcb:updatedAt ] ; rr:objectMap [ rr:column "updated_at" ]; ] ;
rr:predicateObjectMap [ rr:predicateMap [ rr:constant oplcb:hasCategoryGroupsList ] ; rr:objectMap [ rr:termType rr:IRI; rr:template  "http://demo.openlinksw.com/crunchbase/category/{category_groups_list}#this" ]; ] .

#Degrees.csv
<#TriplesMapdegrees> a rr:TriplesMap; rr:logicalTable [ rr:sqlQuery """SELECT *, uuid as cb_uuid FROM crunchbase.demo.degrees""" ]; 
rr:subjectMap [ rr:termType rr:IRI  ; rr:template "http://demo.openlinksw.com/crunchbase/degree/{cb_uuid}#this"; rr:class oplcb:Degree; rr:graph <http://demo.openlinksw.com/crunchbase_demo#> ];
rr:predicateObjectMap [ rr:predicateMap [ rr:constant rdfs:label ] ; rr:objectMap [ rr:column "name" ]; ] ;
rr:predicateObjectMap [ rr:predicateMap [ rr:constant oplcb:hasRank ] ; rr:objectMap [ rr:column "rank" ]; ] ;
rr:predicateObjectMap [ rr:predicateMap [ rr:constant oplcb:createdAt ] ; rr:objectMap [ rr:column "created_at" ]; ] ;
rr:predicateObjectMap [ rr:predicateMap [ rr:constant oplcb:updatedAt ] ; rr:objectMap [ rr:column "updated_at" ]; ] ;
rr:predicateObjectMap [ rr:predicateMap [ rr:constant oplcb:fromInstitution ] ; rr:objectMap [ rr:termType rr:IRI; rr:template "http://demo.openlinksw.com/crunchbase/degrees/{institution_uuid}#this" ]; ] ;
#rr:predicateObjectMap [ rr:predicateMap [ rr:constant oplcb:institution_name ] ; rr:objectMap [ rr:column "institution_name" ]; ] ;
rr:predicateObjectMap [ rr:predicateMap [ rr:constant oplcb:degree_type ] ; rr:objectMap [ rr:termType rr:IRI; rr:template "http://www.openlinksw.com/schemas/crunchbase#{degree_type}" ]; ] ;
rr:predicateObjectMap [ rr:predicateMap [ rr:constant oplcb:subject ] ; rr:objectMap [ rr:termType rr:IRI; rr:template "http://www.openlinksw.com/schemas/crunchbase#{subject}" ]; ] ;
rr:predicateObjectMap [ rr:predicateMap [ rr:constant oplcb:degreeStartedOn ] ; rr:objectMap [ rr:column "started_on" ]; ] ;
rr:predicateObjectMap [ rr:predicateMap [ rr:constant oplcb:degreeCompletedOn ] ; rr:objectMap [ rr:column "completed_on" ]; ] ;
rr:predicateObjectMap [ rr:predicateMap [ rr:constant oplcb:degreIsCompleted ] ; rr:objectMap [ rr:column "is_completed" ]; ] .

<#TriplesMapdegrees_person> a rr:TriplesMap; rr:logicalTable [ rr:sqlQuery """SELECT *, uuid as cb_uuid FROM crunchbase.demo.degrees""" ]; 
rr:subjectMap [ rr:termType rr:IRI  ; rr:template "http://demo.openlinksw.com/crunchbase/person/{person_uuid}#this"; rr:class oplcb:Person; rr:graph <http://demo.openlinksw.com/crunchbase_demo#> ];
rr:predicateObjectMap [ rr:predicateMap [ rr:constant rdfs:label ] ; rr:objectMap [ rr:column "person_name" ]; ] .

<#TriplesMapdegrees_institution> a rr:TriplesMap; rr:logicalTable [ rr:sqlQuery """SELECT *, uuid as cb_uuid FROM crunchbase.demo.degrees""" ]; 
rr:subjectMap [ rr:termType rr:IRI  ; rr:template "http://demo.openlinksw.com/crunchbase/institution/{institution_uuid}#this"; rr:class oplcb:Institution; rr:graph <http://demo.openlinksw.com/crunchbase_demo#> ];
rr:predicateObjectMap [ rr:predicateMap [ rr:constant rdfs:label ] ; rr:objectMap [ rr:column "institution_name" ]; ] .

#Event_appearances.csv
<#TriplesMapevent_appearances> a rr:TriplesMap; rr:logicalTable [ rr:sqlQuery """SELECT *, uuid as cb_uuid, INITCAP(appearance_type) as appearance_type_class FROM crunchbase.demo.event_appearances""" ]; 
rr:subjectMap [ rr:termType rr:IRI  ; rr:template "http://demo.openlinksw.com/crunchbase_demo/{type}/{cb_uuid}#this"; rr:class oplcb:EventAppearance; rr:graph <http://demo.openlinksw.com/crunchbase_demo#> ];
rr:predicateObjectMap [ rr:predicateMap [ rr:constant rdfs:label ] ; rr:objectMap [ rr:column "name" ]; ] ;
rr:predicateObjectMap [ rr:predicateMap [ rr:constant schema:mainEntityOfPage ] ; rr:objectMap [ rr:termType rr:IRI; rr:template "http://www.crunchbase.com/{type}/permalink" ]; ] ;
rr:predicateObjectMap [ rr:predicateMap [ rr:constant oplcb:hasRank ] ; rr:objectMap [ rr:column "rank" ]; ] ;
rr:predicateObjectMap [ rr:predicateMap [ rr:constant oplcb:createdAt ] ; rr:objectMap [ rr:column "created_at" ]; ] ;
rr:predicateObjectMap [ rr:predicateMap [ rr:constant oplcb:updatedAt ] ; rr:objectMap [ rr:column "updated_at" ]; ] ;
rr:predicateObjectMap [ rr:predicateMap [ rr:constant oplcb:ofEvent ] ; rr:objectMap [ rr:termType rr:IRI; rr:template "https://wwww.crunchbase.com/event/{event_uuid}" ]; ] ;
rr:predicateObjectMap [ rr:predicateMap [ rr:constant oplcb:hasParticipant ] ; rr:objectMap [ rr:termType rr:IRI; rr:template "http://demo.openlinksw.com/crunchbase_demo/{participant_type}/{participant_uuid}#this" ]; ] ;
rr:predicateObjectMap [ rr:predicateMap [ rr:constant oplcb:hasAppearanceType ] ; rr:objectMap [ rr:termType rr:IRI; rr:template "http://www.openlinksw.com/schemas/crunchbase#{appearance_type_class}" ]; ] ;
rr:predicateObjectMap [ rr:predicateMap [ rr:constant rdfs:comment ] ; rr:objectMap [ rr:column "short_description" ]; ] .

<#TriplesMapevent_appearances_attendee> a rr:TriplesMap; rr:logicalTable [ rr:sqlQuery """SELECT *, uuid as cb_uuid, INITCAP(participant_type) as participant_class FROM crunchbase.demo.event_appearances""" ]; 
rr:subjectMap [ rr:termType rr:IRI  ; rr:template "http://demo.openlinksw.com/crunchbase_demo/{participant_type}/{participant_uuid}#this"; rr:graph <http://demo.openlinksw.com/crunchbase_demo#> ];
rr:predicateObjectMap [ rr:predicateMap [ rr:constant rdf:type ] ; rr:objectMap [ rr:termType rr:IRI; rr:template "http://www.openlinksw.com/schemas/crunchbase#{participant_class}" ]; ] ;
rr:predicateObjectMap [ rr:predicateMap [ rr:constant rdfs:label ] ; rr:objectMap [ rr:column "participant_name" ]; ] ;
rr:predicateObjectMap [ rr:predicateMap [ rr:constant oplcb:hasEventAppearance ] ; rr:objectMap [ rr:template "http://demo.openlinksw.com/crunchbase_demo/{type}/{cb_uuid}#this" ]; ] .

<#TriplesMapevent_appearances_event> a rr:TriplesMap; rr:logicalTable [ rr:sqlQuery """SELECT *, uuid as cb_uuid FROM crunchbase.demo.event_appearances""" ]; 
rr:subjectMap [ rr:termType rr:IRI  ; rr:template "http://demo.openlinksw.com/crunchbase_demo/event/{event_uuid}#this"; rr:class oplcb:Event; rr:graph <http://demo.openlinksw.com/crunchbase_demo#> ];
rr:predicateObjectMap [ rr:predicateMap [ rr:constant rdfs:label ] ; rr:objectMap [ rr:column "event_name" ]; ] ;
rr:predicateObjectMap [ rr:predicateMap [ rr:constant oplcb:hasEventAppearance ] ; rr:objectMap [ rr:template "http://demo.openlinksw.com/crunchbase_demo/{type}/{cb_uuid}#this" ]; ] .

#Events.csv
<#TriplesMapevents> a rr:TriplesMap; rr:logicalTable [ rr:sqlQuery """SELECT *, uuid as cb_uuid FROM crunchbase.demo.events""" ]; 
rr:subjectMap [ rr:termType rr:IRI  ; rr:template "http://demo.openlinksw.com/crunchbase_demo/{type}/{cb_uuid}#this"; rr:class oplcb:Event; rr:graph <http://demo.openlinksw.com/crunchbase_demo#> ];
rr:predicateObjectMap [ rr:predicateMap [ rr:constant rdfs:label ] ; rr:objectMap [ rr:column "name" ]; ] ;
rr:predicateObjectMap [ rr:predicateMap [ rr:constant schema:mainEntityOfPage ] ; rr:objectMap [ rr:termType rr:IRI; rr:template "https://www.crunchbase.com/{type}/{permalink}" ]; ] ;
rr:predicateObjectMap [ rr:predicateMap [ rr:constant oplcb:hasRank ] ; rr:objectMap [ rr:column "rank" ]; ] ;
rr:predicateObjectMap [ rr:predicateMap [ rr:constant oplcb:createdAt ] ; rr:objectMap [ rr:column "created_at" ]; ] ;
rr:predicateObjectMap [ rr:predicateMap [ rr:constant oplcb:updatedAt ] ; rr:objectMap [ rr:column "updated_at" ]; ] ;
rr:predicateObjectMap [ rr:predicateMap [ rr:constant rdfs:comment ] ; rr:objectMap [ rr:column "short_description" ]; ] ;
rr:predicateObjectMap [ rr:predicateMap [ rr:constant oplcb:startedOn ] ; rr:objectMap [ rr:column "started_on" ]; ] ;
rr:predicateObjectMap [ rr:predicateMap [ rr:constant oplcb:endedOn ] ; rr:objectMap [ rr:column "ended_on" ]; ] ;
rr:predicateObjectMap [ rr:predicateMap [ rr:constant oplcb:hasEventURL ] ; rr:objectMap [ rr:column "event_url" ]; ] ;
rr:predicateObjectMap [ rr:predicateMap [ rr:constant oplcb:hasRegistrationURL ] ; rr:objectMap [ rr:column "registration_url" ]; ] ;
rr:predicateObjectMap [ rr:predicateMap [ rr:constant oplcb:hasVenueName ] ; rr:objectMap [ rr:column "venue_name" ]; ] ;
rr:predicateObjectMap [ rr:predicateMap [ rr:constant oplcb:description ] ; rr:objectMap [ rr:column "description" ]; ] ;
rr:predicateObjectMap [ rr:predicateMap [ rr:constant oplcb:hasCountryCode ] ; rr:objectMap [ rr:column "country_code" ]; ] ;
rr:predicateObjectMap [ rr:predicateMap [ rr:constant oplcb:hasStateCode ] ; rr:objectMap [ rr:column "state_code" ]; ] ;
rr:predicateObjectMap [ rr:predicateMap [ rr:constant oplcb:hasRegion ] ; rr:objectMap [ rr:column "region" ]; ] ;
rr:predicateObjectMap [ rr:predicateMap [ rr:constant oplcb:hasCity ] ; rr:objectMap [ rr:column "city" ]; ] ;
rr:predicateObjectMap [ rr:predicateMap [ rr:constant schema:logo] ; rr:objectMap [ rr:termType rr:IRI; rr:template "{logo_url}" ]; ] ;
rr:predicateObjectMap [ rr:predicateMap [ rr:constant oplcb:hasEventRoles ] ; rr:objectMap [ rr:column "event_roles" ]; ] .

#funding_rounds.csv
<#TriplesMapfunding_rounds> a rr:TriplesMap; rr:logicalTable [ rr:sqlQuery """SELECT *, uuid as cb_uuid FROM crunchbase.demo.funding_rounds""" ]; 
rr:subjectMap [ rr:termType rr:IRI  ; rr:template "http://demo.openlinksw.com/crunchbase_demo/{type}/{cb_uuid}#this"; rr:class oplcb:FundingRound; rr:graph <http://demo.openlinksw.com/crunchbase_demo#> ];
rr:predicateObjectMap [ rr:predicateMap [ rr:constant rdfs:label ] ; rr:objectMap [ rr:column "name" ]; ] ;
rr:predicateObjectMap [ rr:predicateMap [ rr:constant schema:mainEntityOfPage ] ; rr:objectMap [ rr:termType rr:IRI; rr:template "www.crunchbase.com/{type}/{permalink}" ]; ] ;
rr:predicateObjectMap [ rr:predicateMap [ rr:constant oplcb:hasRank ] ; rr:objectMap [ rr:column "rank" ]; ] ;
rr:predicateObjectMap [ rr:predicateMap [ rr:constant oplcb:createdAt ] ; rr:objectMap [ rr:column "created_at" ]; ] ;
rr:predicateObjectMap [ rr:predicateMap [ rr:constant oplcb:updatedAt ] ; rr:objectMap [ rr:column "updated_at" ]; ] ;
rr:predicateObjectMap [ rr:predicateMap [ rr:constant oplcb:hasCountryCode ] ; rr:objectMap [ rr:column "country_code" ]; ] ;
rr:predicateObjectMap [ rr:predicateMap [ rr:constant oplcb:hasStateCode ] ; rr:objectMap [ rr:column "state_code" ]; ] ;
rr:predicateObjectMap [ rr:predicateMap [ rr:constant oplcb:hasRegion ] ; rr:objectMap [ rr:column "region" ]; ] ;
rr:predicateObjectMap [ rr:predicateMap [ rr:constant oplcb:hasCity ] ; rr:objectMap [ rr:column "city" ]; ] ;
rr:predicateObjectMap [ rr:predicateMap [ rr:constant oplcb:hasInvestmentType ] ; rr:objectMap [ rr:termType rr:IRI; rr:template "http://www.openlinksw.com/schemas/crunchbase#{investment_type}" ]; ] ;
rr:predicateObjectMap [ rr:predicateMap [ rr:constant oplcb:announcedOn ] ; rr:objectMap [ rr:column "announced_on" ]; ] ;
rr:predicateObjectMap [ rr:predicateMap [ rr:constant oplcb:raisedUSDAmount ] ; rr:objectMap [ rr:column "raised_amount_usd" ]; ] ;
rr:predicateObjectMap [ rr:predicateMap [ rr:constant oplcb:raisedAmount ] ; rr:objectMap [ rr:column "raised_amount" ]; ] ;
rr:predicateObjectMap [ rr:predicateMap [ rr:constant oplcb:raisedAmountCurrencyCode ] ; rr:objectMap [ rr:column "raised_amount_currency_code" ]; ] ;
rr:predicateObjectMap [ rr:predicateMap [ rr:constant oplcb:hasPostMoneyValuationUSD ] ; rr:objectMap [ rr:column "post_money_valuation_usd" ]; ] ;
rr:predicateObjectMap [ rr:predicateMap [ rr:constant oplcb:postMoneyValuation ] ; rr:objectMap [ rr:column "post_money_valuation" ]; ] ;
rr:predicateObjectMap [ rr:predicateMap [ rr:constant oplcb:postMoneyValuationCurrencyCode ] ; rr:objectMap [ rr:column "post_money_valuation_currency_code" ]; ] ;
rr:predicateObjectMap [ rr:predicateMap [ rr:constant oplcb:hasInvestorCount ] ; rr:objectMap [ rr:column "investor_count" ]; ] .
#rr:predicateObjectMap [ rr:predicateMap [ rr:constant oplcb:hasLeadInvestor ] ; rr:objectMap [ rr:column "http://demo.openlinksw.com/crunchbase_demo/investor/{lead_investor_uuids}" ]; ] .

<#TriplesMapfunding_rounds> a rr:TriplesMap; rr:logicalTable [ rr:sqlQuery """SELECT *, uuid as cb_uuid FROM crunchbase.demo.funding_rounds""" ]; 
rr:subjectMap [ rr:termType rr:IRI  ; rr:template "http://demo.openlinksw.com/crunchbase_demo/organization/{org_uuid}#this"; rr:class oplcb:Organization; rr:graph <http://demo.openlinksw.com/crunchbase_demo#> ];
rr:predicateObjectMap [ rr:predicateMap [ rr:constant rdfs:label ] ; rr:objectMap [ rr:column "org_name" ]; ] ;
rr:predicateObjectMap [ rr:predicateMap [ rr:constant oplcb:hasFundingRound ] ; rr:objectMap [ rr:termType rr:IRI; rr:template "https://demo.openlinkse.com/crunchbase_demo/{type}/{cb_uuid}#this" ]; ] .

#funds.csv
<#TriplesMapfunds> a rr:TriplesMap; rr:logicalTable [ rr:sqlQuery """SELECT *, uuid as cb_uuid FROM crunchbase.demo.funds""" ]; 
rr:subjectMap [ rr:termType rr:IRI  ; rr:template "http://demo.openlinksw.com/crunchbase_demo/{type}/{cb_uuid}#this"; rr:class oplcb:Fund; rr:graph <http://demo.openlinksw.com/crunchbase_demo#> ];
rr:predicateObjectMap [ rr:predicateMap [ rr:constant rdfs_label ] ; rr:objectMap [ rr:column "name" ]; ] ;
rr:predicateObjectMap [ rr:predicateMap [ rr:constant schema:mainEntityOfPage ] ; rr:objectMap [ rr:termType rr:IRI; rr:template "https://www.crunchbase.com/{type}/{permalink}" ]; ] ;
rr:predicateObjectMap [ rr:predicateMap [ rr:constant oplcb:hasRank ] ; rr:objectMap [ rr:column "rank" ]; ] ;
rr:predicateObjectMap [ rr:predicateMap [ rr:constant oplcb:createdAt ] ; rr:objectMap [ rr:column "created_at" ]; ] ;
rr:predicateObjectMap [ rr:predicateMap [ rr:constant oplcb:updatedAt ] ; rr:objectMap [ rr:column "updated_at" ]; ] ;
#rr:predicateObjectMap [ rr:predicateMap [ rr:constant oplcb:entity_uuid ] ; rr:objectMap [ rr:column "entity_uuid" ]; ] ;
#rr:predicateObjectMap [ rr:predicateMap [ rr:constant oplcb:entity_name ] ; rr:objectMap [ rr:column "entity_name" ]; ] ;
#rr:predicateObjectMap [ rr:predicateMap [ rr:constant oplcb:entity_type ] ; rr:objectMap [ rr:column "entity_type" ]; ] ;
rr:predicateObjectMap [ rr:predicateMap [ rr:constant oplcb:announcedOn ] ; rr:objectMap [ rr:column "announced_on" ]; ] ;
rr:predicateObjectMap [ rr:predicateMap [ rr:constant oplcb:hasRaisedAmountUSD ] ; rr:objectMap [ rr:column "raised_amount_usd" ]; ] ;
rr:predicateObjectMap [ rr:predicateMap [ rr:constant oplcb:hasRaisedAmount ] ; rr:objectMap [ rr:column "raised_amount" ]; ] ;
rr:predicateObjectMap [ rr:predicateMap [ rr:constant oplcb:hasRaisedAmountCurrencyCode ] ; rr:objectMap [ rr:column "raised_amount_currency_code" ]; ] .


<#TriplesMapfunds_organization> a rr:TriplesMap; rr:logicalTable [ rr:sqlQuery """SELECT *, uuid as cb_uuid, INITCAP(entity_type) as entity_class FROM crunchbase.demo.funds""" ]; 
rr:subjectMap [ rr:termType rr:IRI  ; rr:template "http://demo.openlinksw.com/crunchbase_demo/{entity_type}/{entity_uuid}#this"; rr:graph <http://demo.openlinksw.com/crunchbase_demo#> ];
rr:predicateObjectMap [ rr:predicateMap [ rr:constant rdf:type ] ; rr:objectMap [ rr:termType rr:IRI; rr:template "http://www.openlinksw.com/schemas/crunchbase#{entity_class}" ]; ] ; 
rr:predicateObjectMap [ rr:predicateMap [ rr:constant rdfs:label ] ; rr:objectMap [ rr:column "entity_name" ]; ] ;
rr:predicateObjectMap [ rr:predicateMap [ rr:constant oplcb:hasFund ] ; rr:objectMap [ rr:termType rr:IRI; rr:template "http://demo.openlinksw.com/crunchbase_demo/{type}/{cb_uuid}#this" ]; ] .

#investment_partners.csv
<#TriplesMapinvestment_partners> a rr:TriplesMap; rr:logicalTable [ rr:sqlQuery """SELECT *, uuid as cb_uuid FROM crunchbase.demo.investment_partners""" ]; 
rr:subjectMap [ rr:termType rr:IRI  ; rr:template "http://demo.openlinksw.com/crunchbase_demo/{type}/{uuid}#this"; rr:class oplcb:Investment; rr:graph <http://demo.openlinksw.com/crunchbase_demo#> ];
rr:predicateObjectMap [ rr:predicateMap [ rr:constant rdfs:label ] ; rr:objectMap [ rr:column "name" ]; ] ;
rr:predicateObjectMap [ rr:predicateMap [ rr:constant schema:mainEntityOfPage ] ; rr:objectMap [ rr:termType rr:IRI; rr:template "https://www.crunchbase.com/{type}/{permalink}" ]; ] ;
rr:predicateObjectMap [ rr:predicateMap [ rr:constant oplcb:hasRank ] ; rr:objectMap [ rr:column "rank" ]; ] ;
rr:predicateObjectMap [ rr:predicateMap [ rr:constant oplcb:createdAt ] ; rr:objectMap [ rr:column "created_at" ]; ] ;
rr:predicateObjectMap [ rr:predicateMap [ rr:constant oplcb:updatedAt ] ; rr:objectMap [ rr:column "updated_at" ]; ] ;
rr:predicateObjectMap [ rr:predicateMap [ rr:constant oplcb:hasFundingRound ] ; rr:objectMap [ rr:termType rr:IRI; rr:template "http://demo.openlinksw.com/crunchbase_demo/funding_round/{funding_round_uuid}#this" ]; ] ;
rr:predicateObjectMap [ rr:predicateMap [ rr:constant oplcb:investor_uuid ] ; rr:objectMap [ rr:termType rr:IRI; rr:template "http://demo.openlinksw.com/crunchbase_demo/organization/{investor_uuid}#this" ]; ] ;
rr:predicateObjectMap [ rr:predicateMap [ rr:constant oplcb:partner_uuid ] ; rr:objectMap [ rr:termType rr:IRI; rr:template "http://demo.openlinksw.com/crunchbase_demo/people/{partner_uuid}#this" ]; ] .

<#TriplesMapinvestment_partners_funding_round> a rr:TriplesMap; rr:logicalTable [ rr:sqlQuery """SELECT *, uuid as cb_uuid FROM crunchbase.demo.investment_partners""" ]; 
rr:subjectMap [ rr:termType rr:IRI  ; rr:template "http://demo.openlinksw.com/crunchbase_demo/funding_round/{funding_round_uuid}#this"; rr:class oplcb:FundingRound; rr:graph <http://demo.openlinksw.com/crunchbase_demo#> ];
rr:predicateObjectMap [ rr:predicateMap [ rr:constant rdfs:label ] ; rr:objectMap [ rr:column "funding_round_name" ]; ] .

<#TriplesMapinvestment_partners_investor> a rr:TriplesMap; rr:logicalTable [ rr:sqlQuery """SELECT *, uuid as cb_uuid FROM crunchbase.demo.investment_partners""" ]; 
rr:subjectMap [ rr:termType rr:IRI  ; rr:template "http://demo.openlinksw.com/crunchbase_demo/funding_round/{investor_uuid}#this"; rr:graph <http://demo.openlinksw.com/crunchbase_demo#> ];
rr:predicateObjectMap [ rr:predicateMap [ rr:constant rdfs:label ] ; rr:objectMap [ rr:column "investor_name" ]; ] .

<#TriplesMapinvestment_partners_people> a rr:TriplesMap; rr:logicalTable [ rr:sqlQuery """SELECT *, uuid as cb_uuid FROM crunchbase.demo.investment_partners""" ]; 
rr:subjectMap [ rr:termType rr:IRI  ; rr:template "http://demo.openlinksw.com/crunchbase_demo/funding_round/{partner_uuid}#this"; rr:class oplcb:Person; rr:graph <http://demo.openlinksw.com/crunchbase_demo#> ];
rr:predicateObjectMap [ rr:predicateMap [ rr:constant rdfs:label ] ; rr:objectMap [ rr:column "partner_name" ]; ] .

###Turtle End###