### Turtle Start ###
@prefix rr: <http://www.w3.org/ns/r2rml#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#>.
@prefix owl: <http://www.w3.org/2002/07/owl#>.
@prefix schema: <http://schema.org/>
@prefix oplcb: <http://www.openlinksw.com/schemas/crunchbase#>.
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix void: <http://rdfs.org/ns/void#> .
@prefix scovo: <http://purl.org/NET/scovo#> .
@prefix aowl: <http://bblfish.net/work/atom-owl/2006-06-06/> .

#org_parents.csv
<#TriplesMaporg_parents> a rr:TriplesMap; rr:logicalTable [ rr:sqlQuery """SELECT *, uuid as cb_uuid FROM crunchbase.demo.org_parents""" ]; 
rr:subjectMap [ rr:termType rr:IRI  ; rr:template "http://demo.openlinksw.com/crunchbase_demo/{type}/{cb_uuid}#this"; rr:class oplcb:Organization; rr:graph <http://demo.openlinksw.com/crunchbase_demo2#> ];
rr:predicateObjectMap [ rr:predicateMap [ rr:constant rdfs:label ] ; rr:objectMap [ rr:column "name" ]; ] ;
rr:predicateObjectMap [ rr:predicateMap [ rr:constant schema:mainEntityOfPage ] ; rr:objectMap [ rr:column "cb_url" ]; ] ;
rr:predicateObjectMap [ rr:predicateMap [ rr:constant oplcb:hasRank ] ; rr:objectMap [ rr:column "rank" ]; ] ;
rr:predicateObjectMap [ rr:predicateMap [ rr:constant oplcb:createdAt ] ; rr:objectMap [ rr:column "created_at" ]; ] ;
rr:predicateObjectMap [ rr:predicateMap [ rr:constant oplcb:updatedAt ] ; rr:objectMap [ rr:column "updated_at" ]; ] ;
rr:predicateObjectMap [ rr:predicateMap [ rr:constant oplcb:hasParentOrganization ] ; rr:objectMap [ rr:termType rr:IRI; rr:template "http://demo.openlinksw.com/crunchbase_demo/organization/{parent_uuid}#this" ]; ] .

<#TriplesMaporg_parents> a rr:TriplesMap; rr:logicalTable [ rr:sqlQuery """SELECT *, uuid as cb_uuid FROM crunchbase.demo.org_parents""" ]; 
rr:subjectMap [ rr:termType rr:IRI  ; rr:template "http://demo.openlinksw.com/crunchbase_demo/organization/{parent_uuid}#this"; rr:class oplcb:Organization; rr:graph <http://demo.openlinksw.com/crunchbase_demo2#> ];
rr:predicateObjectMap [ rr:predicateMap [ rr:constant rdfs:label ] ; rr:objectMap [ rr:column "parent_name" ]; ] .

#investments.csv
<#TriplesMapinvestments> a rr:TriplesMap; rr:logicalTable [ rr:sqlQuery """SELECT *,
                                                                            uuid as cb_uuid,
                                                                            CASE 
                                                                                WHEN is_lead_investor = 'True' THEN investor_uuid
                                                                            END AS lead_investor_uuid
                                                                            FROM
                                                                                crunchbase.demo.investments""" ]; 

rr:subjectMap [ rr:termType rr:IRI  ; rr:template "http://demo.openlinksw.com/crunchbase_demo/{type}/{cb_uuid}#this"; rr:class oplcb:Investment; rr:graph <http://demo.openlinksw.com/crunchbase_demo2#> ];
rr:predicateObjectMap [ rr:predicateMap [ rr:constant rdfs:label ] ; rr:objectMap [rr:termType rr:Literal; rr:column "name" ]; ] ;
rr:predicateObjectMap [ rr:predicateMap [ rr:constant schema:mainEntityOfPage ] ; rr:objectMap [ rr:termType rr:IRI; rr:template "{cb_url}" ]; ] ;
rr:predicateObjectMap [ rr:predicateMap [ rr:constant oplcb:hasRank ] ; rr:objectMap [ rr:column "rank" ]; ] ;
rr:predicateObjectMap [ rr:predicateMap [ rr:constant oplcb:createdAt ] ; rr:objectMap [ rr:column "created_at" ]; ] ;
rr:predicateObjectMap [ rr:predicateMap [ rr:constant oplcb:updatedAt ] ; rr:objectMap [ rr:column "updated_at" ]; ] ;
rr:predicateObjectMap [ rr:predicateMap [ rr:constant oplcb:hasFundingRound ] ; rr:objectMap [ rr:termType rr:IRI; rr:template "hhtp://demo.openlinksw.com/crunchbase_demo/funding_round/{funding_round_uuid}" ]; ] ;
rr:predicateObjectMap [ rr:predicateMap [ rr:constant oplcb:hasInvestor ] ; rr:objectMap [ rr:termType rr:IRI; rr:template "http://demo.openliniksw.com/crunchbase_demo/{investor_type}/{investor_uuid}" ]; ] ;
rr:predicateObjectMap [ rr:predicateMap [ rr:constant oplcb:hasLeadInvestor ] ; rr:objectMap [ rr:termType rr:IRI; rr:template "http://demo.openliniksw.com/crunchbase_demo/{investor_type}/{lead_investor_uuid}" ]; ] .

<#TriplesMapinvestments_funding_round> a rr:TriplesMap; rr:logicalTable [ rr:sqlQuery """SELECT *, uuid as cb_uuid FROM crunchbase.demo.investments""" ]; 
rr:subjectMap [ rr:termType rr:IRI  ; rr:template "http://demo.openlinksw.com/crunchbase_demo/funding_round/{funding_round_uuid}#this"; rr:class oplcb:FundingRound; rr:graph <http://demo.openlinksw.com/crunchbase_demo2#> ];
rr:predicateObjectMap [ rr:predicateMap [ rr:constant rdfs:label ] ; rr:objectMap [ rr:column "funding_round_name" ]; ] .

<#TriplesMapinvestments_investor> a rr:TriplesMap; rr:logicalTable [ rr:sqlQuery """SELECT *, uuid as cb_uuid FROM crunchbase.demo.investments""" ]; 
rr:subjectMap [ rr:termType rr:IRI  ; rr:template "http://demo.openlinksw.com/crunchbase_demo/{investor_type}/{investor_uuid}#this"; rr:class oplcb:Investor; rr:graph <http://demo.openlinksw.com/crunchbase_demo2#> ];
rr:predicateObjectMap [ rr:predicateMap [ rr:constant rdfs:label ] ; rr:objectMap [ rr:column "investor_name" ]; ] .

#investors.csv
<#TriplesMapinvestors> a rr:TriplesMap; rr:logicalTable [ rr:sqlQuery """SELECT DISTINCT *, uuid as cb_uuid, INITCAP(type) as class  FROM crunchbase.demo.investors""" ]; 
rr:subjectMap [ rr:termType rr:IRI  ; rr:template "http://demo.openlinksw.com/crunchbase_demo/{type}/{cb_uuid}#this"; rr:graph <http://demo.openlinksw.com/crunchbase_demo2#> ];
rr:predicateObjectMap [ rr:predicateMap [ rr:constant rdfs:label ] ; rr:objectMap [ rr:column "name" ]; ] ;
rr:predicateObjectMap [ rr:predicateMap [ rr:constant rdf:type ] ; rr:objectMap [ rr:termType rr:IRI; rr:template "http://www.openlinksw.com/schemas/crunchbase#{class}" ]; ] ;
rr:predicateObjectMap [ rr:predicateMap [ rr:constant schema:mainEntityOfPage ] ; rr:objectMap [ rr:column "cb_url" ]; ] ;
rr:predicateObjectMap [ rr:predicateMap [ rr:constant oplcb:hasRank ] ; rr:objectMap [ rr:column "rank" ]; ] ;
rr:predicateObjectMap [ rr:predicateMap [ rr:constant oplcb:createdAt ] ; rr:objectMap [ rr:column "created_at" ]; ] ;
rr:predicateObjectMap [ rr:predicateMap [ rr:constant oplcb:updatedAt ] ; rr:objectMap [ rr:column "updated_at" ]; ] ;
rr:predicateObjectMap [ rr:predicateMap [ rr:constant oplcb:hasRoles ] ; rr:objectMap [ rr:column "roles" ]; ] ;
rr:predicateObjectMap [ rr:predicateMap [ rr:constant schema:url ] ; rr:objectMap [ rr:column "domain" ]; ] ;
rr:predicateObjectMap [ rr:predicateMap [ rr:constant oplcb:hasCountryCode ] ; rr:objectMap [ rr:column "country_code" ]; ] ;
rr:predicateObjectMap [ rr:predicateMap [ rr:constant oplcb:hasStateCode ] ; rr:objectMap [ rr:column "state_code" ]; ] ;
rr:predicateObjectMap [ rr:predicateMap [ rr:constant oplcb:hasRegion ] ; rr:objectMap [ rr:column "region" ]; ] ;
rr:predicateObjectMap [ rr:predicateMap [ rr:constant oplcb:hasCity ] ; rr:objectMap [ rr:column "city" ]; ] ;
rr:predicateObjectMap [ rr:predicateMap [ rr:constant oplcb:investorTypes ] ; rr:objectMap [ rr:column "investor_types" ]; ] ;
rr:predicateObjectMap [ rr:predicateMap [ rr:constant oplcb:hasInvestmentCount ] ; rr:objectMap [ rr:column "investment_count" ]; ] ;
rr:predicateObjectMap [ rr:predicateMap [ rr:constant oplcb:totalFundingUSD ] ; rr:objectMap [ rr:column "total_funding_usd" ]; ] ;
rr:predicateObjectMap [ rr:predicateMap [ rr:constant oplcb:totalFunding ] ; rr:objectMap [ rr:column "total_funding" ]; ] ;
rr:predicateObjectMap [ rr:predicateMap [ rr:constant oplcb:totalFundingCurrencyCode ] ; rr:objectMap [ rr:column "total_funding_currency_code" ]; ] ;
rr:predicateObjectMap [ rr:predicateMap [ rr:constant oplcb:foundedOn ] ; rr:objectMap [ rr:column "founded_on" ]; ] ;
rr:predicateObjectMap [ rr:predicateMap [ rr:constant oplcb:closedOn ] ; rr:objectMap [ rr:column "closed_on" ]; ] ;
rr:predicateObjectMap [ rr:predicateMap [ rr:constant oplcb:hasFacebookURL ] ; rr:objectMap [ rr:column "facebook_url" ]; ] ;
rr:predicateObjectMap [ rr:predicateMap [ rr:constant oplcb:hasLinkedinURL ] ; rr:objectMap [ rr:column "linkedin_url" ]; ] ;
rr:predicateObjectMap [ rr:predicateMap [ rr:constant oplcb:hasTwitterURL ] ; rr:objectMap [ rr:column "twitter_url" ]; ] ;
rr:predicateObjectMap [ rr:predicateMap [ rr:constant schema:logo ] ; rr:objectMap [ rr:column "logo_url" ]; ] .

#ipos.csv
<#TriplesMapipos> a rr:TriplesMap; rr:logicalTable [ rr:sqlQuery """SELECT *, uuid AS cb_uuid FROM crunchbase.demo.ipos""" ]; 
rr:subjectMap [ rr:termType rr:IRI  ; rr:template "http://demo.openlinksw.com/crunchbase_demo/{type}/{cb_uuid}#this"; rr:class oplcb:IPO; rr:graph <http://demo.openlinksw.com/crunchbase_demo2#> ];
rr:predicateObjectMap [ rr:predicateMap [ rr:constant rdfs:label ] ; rr:objectMap [ rr:column "name" ]; ] ;
rr:predicateObjectMap [ rr:predicateMap [ rr:constant schema:mainEntityOfPage ] ; rr:objectMap [ rr:column "cb_url" ]; ] ;
rr:predicateObjectMap [ rr:predicateMap [ rr:constant oplcb:hasRank ] ; rr:objectMap [ rr:column "rank" ]; ] ;
rr:predicateObjectMap [ rr:predicateMap [ rr:constant oplcb:createdAt ] ; rr:objectMap [ rr:column "created_at" ]; ] ;
rr:predicateObjectMap [ rr:predicateMap [ rr:constant oplcb:updatedAt ] ; rr:objectMap [ rr:column "updated_at" ]; ] ;
rr:predicateObjectMap [ rr:predicateMap [ rr:constant oplcb:hasIPOOrganization ] ; rr:objectMap [ rr:termType rr:IRI; rr:template "http://demo.openlinksw.com/crunchbase_demo/organization/{org_uuid}#this" ]; ] ;
rr:predicateObjectMap [ rr:predicateMap [ rr:constant oplcb:wentPublicOn ] ; rr:objectMap [ rr:column "went_public_on" ]; ] ;
rr:predicateObjectMap [ rr:predicateMap [ rr:constant oplcb:hasSharePriceUsd ] ; rr:objectMap [ rr:column "share_price_usd" ]; ] ;
rr:predicateObjectMap [ rr:predicateMap [ rr:constant oplcb:hasSharePrice ] ; rr:objectMap [ rr:column "share_price" ]; ] ;
rr:predicateObjectMap [ rr:predicateMap [ rr:constant oplcb:hasSharePriceCurrencyCode ] ; rr:objectMap [ rr:column "share_price_currency_code" ]; ] ;
rr:predicateObjectMap [ rr:predicateMap [ rr:constant oplcb:hasValuationPriceUSD ] ; rr:objectMap [ rr:column "valuation_price_usd" ]; ] ;
rr:predicateObjectMap [ rr:predicateMap [ rr:constant oplcb:hasValuationPrice ] ; rr:objectMap [ rr:column "valuation_price" ]; ] ;
rr:predicateObjectMap [ rr:predicateMap [ rr:constant oplcb:hasValuationPriceCurrencyCode ] ; rr:objectMap [ rr:column "valuation_price_currency_code" ]; ] ;
rr:predicateObjectMap [ rr:predicateMap [ rr:constant oplcb:hasMoneyRaisedUSD ] ; rr:objectMap [ rr:column "money_raised_usd" ]; ] ;
rr:predicateObjectMap [ rr:predicateMap [ rr:constant oplcb:hasMoneyRaised ] ; rr:objectMap [ rr:column "money_raised" ]; ] ;
rr:predicateObjectMap [ rr:predicateMap [ rr:constant oplcb:hasMoneyRaisedCurrencyCode ] ; rr:objectMap [ rr:column "money_raised_currency_code" ]; ] .


<#TriplesMapipos_organization> a rr:TriplesMap; rr:logicalTable [ rr:sqlQuery """SELECT *, uuid AS cb_uuid FROM crunchbase.demo.ipos""" ]; 
rr:subjectMap [ rr:termType rr:IRI  ; rr:template "http://demo.openlinksw.com/crunchbase_demo/organization/{org_uuid}#this"; rr:class oplcb:IPO; rr:graph <http://demo.openlinksw.com/crunchbase_demo2#> ];
rr:predicateObjectMap [ rr:predicateMap [ rr:constant rdfs:label ] ; rr:objectMap [ rr:column "org_name" ]; ] ;
rr:predicateObjectMap [ rr:predicateMap [ rr:constant schema:mainEntityOfPage ] ; rr:objectMap [ rr:column "org_cb_url" ]; ] ;
rr:predicateObjectMap [ rr:predicateMap [ rr:constant oplcb:hasCountryCode ] ; rr:objectMap [ rr:column "country_code" ]; ] ;
rr:predicateObjectMap [ rr:predicateMap [ rr:constant oplcb:hasStateCode ] ; rr:objectMap [ rr:column "state_code" ]; ] ;
rr:predicateObjectMap [ rr:predicateMap [ rr:constant oplcb:hasRegion ] ; rr:objectMap [ rr:column "region" ]; ] ;
rr:predicateObjectMap [ rr:predicateMap [ rr:constant oplcb:hasCity ] ; rr:objectMap [ rr:column "city" ]; ] ;
rr:predicateObjectMap [ rr:predicateMap [ rr:constant oplcb:hasStockExchangeSymbol ] ; rr:objectMap [ rr:column "stock_exchange_symbol" ]; ] ;
rr:predicateObjectMap [ rr:predicateMap [ rr:constant oplcb:hasStockSymbol ] ; rr:objectMap [ rr:column "stock_symbol" ]; ] ;
rr:predicateObjectMap [ rr:predicateMap [ rr:constant oplcb:hasIPO ] ; rr:objectMap [ rr:termType rr:IRI; rr:template: "http://demo.openlinksw.com/crunchbase_demo/{type}/{cb_uuid}#this" ]; ] .

#jobs.csv
<#TriplesMapjobs> a rr:TriplesMap; rr:logicalTable [ rr:sqlQuery """select *, uuid AS cb_uuid, CASE WHEN is_current = 'True' THEN uuid END current_job_uuid  FROM crunchbase.demo.jobs""" ]; 
rr:subjectMap [ rr:termType rr:IRI  ; rr:template "http://demo.openlinksw.com/crunchbase_demo/{type}/{cb_uuid}#this"; rr:class oplcb:Job; rr:graph <http://demo.openlinksw.com/crunchbase_demo2#> ];
rr:predicateObjectMap [ rr:predicateMap [ rr:constant rdfs:label ] ; rr:objectMap [ rr:template "{title} @ {org_name}" ]; ] ;
rr:predicateObjectMap [ rr:predicateMap [ rr:constant schema:mainEntityOfPage ] ; rr:objectMap [ rr:termType rr:IRI; rr:template "cb_url" ]; ] ;
rr:predicateObjectMap [ rr:predicateMap [ rr:constant oplcb:hasRank ] ; rr:objectMap [ rr:column "rank" ]; ] ;
rr:predicateObjectMap [ rr:predicateMap [ rr:constant oplcb:createdAt ] ; rr:objectMap [ rr:column "created_at" ]; ] ;
rr:predicateObjectMap [ rr:predicateMap [ rr:constant oplcb:updatedAt ] ; rr:objectMap [ rr:column "updated_at" ]; ] ;
rr:predicateObjectMap [ rr:predicateMap [ rr:constant oplcb:hasJobOrganization] ; rr:objectMap [ rr:termType rr:IRI; rr:template "http://www.openlinksw.com/organization/{org_uuid}#this" ]; ] ;
rr:predicateObjectMap [ rr:predicateMap [ rr:constant oplcb:startedOn ] ; rr:objectMap [ rr:column "started_on" ]; ] ;
rr:predicateObjectMap [ rr:predicateMap [ rr:constant oplcb:endedOn ] ; rr:objectMap [ rr:column "ended_on" ]; ] ;
rr:predicateObjectMap [ rr:predicateMap [ rr:constant oplcb:jobTitle ] ; rr:objectMap [ rr:column "title" ]; ] ;
rr:predicateObjectMap [ rr:predicateMap [ rr:constant oplcb:jobType ] ; rr:objectMap [ rr:termType rr:IRI; rr:template "http://www.openlinksw.com/schemas/crunchbase#{job_type}" ]; ] .

<#TriplesMapjobs_person> a rr:TriplesMap; rr:logicalTable [ rr:sqlQuery """select *, uuid AS cb_uuid, CASE WHEN is_current = 'True' THEN uuid END current_job_uuid  FROM crunchbase.demo.jobs""" ]; 
rr:subjectMap [ rr:termType rr:IRI  ; rr:template "http://demo.openlinksw.com/crunchbase_demo/person/{person_uuid}#this"; rr:class oplcb:Person; rr:graph <http://demo.openlinksw.com/crunchbase_demo2#> ];
rr:predicateObjectMap [ rr:predicateMap [ rr:constant rdfs:label ] ; rr:objectMap [ rr:column "person_name" ]; ] ;
rr:predicateObjectMap [ rr:predicateMap [ rr:constant oplcb:hasJob ] ; rr:objectMap [ rr:termType rr:IRI; rr:template "http://demo.openlinksw.com/crunchbase_demo/{type}/{cb_uuid}#this" ]; ] ;
rr:predicateObjectMap [ rr:predicateMap [ rr:constant oplcb:hasCurrentJob ] ; rr:objectMap [ rr:termType rr:IRI; rr:template "http://demo.openlinksw.com/crunchbase_demo/{type}/{current_job_uuid}#this" ]; ].

<#TriplesMapjobs_organization> a rr:TriplesMap; rr:logicalTable [ rr:sqlQuery """select *, uuid AS cb_uuid, CASE WHEN is_current = 'True' THEN uuid END current_job_uuid  FROM crunchbase.demo.jobs""" ]; 
rr:subjectMap [ rr:termType rr:IRI  ; rr:template "http://demo.openlinksw.com/crunchbase_demo/person/{org_uuid}#this"; rr:class oplcb:Organization; rr:graph <http://demo.openlinksw.com/crunchbase_demo2#> ];
rr:predicateObjectMap [ rr:predicateMap [ rr:constant rdfs:label ] ; rr:objectMap [ rr:column "org_name" ]; ] .


#Organization_descriptions.csv
<#TriplesMaporganization_descriptions> a rr:TriplesMap; rr:logicalTable [ rr:sqlQuery """SELECT *, uuid as cb_uuid FROM crunchbase.demo.organization_descriptions""" ]; 
rr:subjectMap [ rr:termType rr:IRI  ; rr:template "http://demo.openlinksw.com/crunchbase_demo/{type}/{cb_uuid}#this"; rr:class oplcb:organization_descriptions; rr:graph <http://demo.openlinksw.com/crunchbase_demo2#> ];
rr:predicateObjectMap [ rr:predicateMap [ rr:constant rdfs:label ] ; rr:objectMap [ rr:column "name" ]; ] ;
rr:predicateObjectMap [ rr:predicateMap [ rr:constant schema:mainEntityOfPage ] ; rr:objectMap [ rr:column "cb_url" ]; ] ;
rr:predicateObjectMap [ rr:predicateMap [ rr:constant oplcb:hasRank ] ; rr:objectMap [ rr:column "rank" ]; ] ;
rr:predicateObjectMap [ rr:predicateMap [ rr:constant oplcb:createdAt ] ; rr:objectMap [ rr:column "created_at" ]; ] ;
rr:predicateObjectMap [ rr:predicateMap [ rr:constant oplcb:updatedAt ] ; rr:objectMap [ rr:column "updated_at" ]; ] ;
rr:predicateObjectMap [ rr:predicateMap [ rr:constant rdfs:comment ] ; rr:objectMap [ rr:column "description" ]; ] .

#Organizations.csv
<#TriplesMaporganizations> a rr:TriplesMap; rr:logicalTable [ rr:sqlQuery """SELECT *, uuid as cb_uuid FROM crunchbase.demo.organizations""" ]; 
rr:subjectMap [ rr:termType rr:IRI  ; rr:template "http://demo.openlinksw.com/crunchbase_demo/organization{cb_uuid}#this"; rr:class oplcb:Organization; rr:graph <http://demo.openlinksw.com/crunchbase_demo2#> ];
rr:predicateObjectMap [ rr:predicateMap [ rr:constant rdfs:label ] ; rr:objectMap [ rr:column "name" ]; ] ;
rr:predicateObjectMap [ rr:predicateMap [ rr:constant oplcb:hasRank ] ; rr:objectMap [ rr:column "rank" ]; ] ;
rr:predicateObjectMap [ rr:predicateMap [ rr:constant oplcb:createdAt ] ; rr:objectMap [ rr:column "created_at" ]; ] ;
rr:predicateObjectMap [ rr:predicateMap [ rr:constant oplcb:updatedAt ] ; rr:objectMap [ rr:column "updated_at" ]; ] ;
rr:predicateObjectMap [ rr:predicateMap [ rr:constant oplcb:hasLegalName ] ; rr:objectMap [ rr:column "legal_name" ]; ] ;
rr:predicateObjectMap [ rr:predicateMap [ rr:constant oplcb:hasRoles ] ; rr:objectMap [ rr:column "roles" ]; ] ;
#rr:predicateObjectMap [ rr:predicateMap [ rr:constant oplcb:domain ] ; rr:objectMap [ rr:column "domain" ]; ] ;
rr:predicateObjectMap [ rr:predicateMap [ rr:constant oplcb:homepage_url ] ; rr:objectMap [ rr:termType rr:Literal; rr:column "homepage_url" ]; ] ;
rr:predicateObjectMap [ rr:predicateMap [ rr:constant oplcb:countryCode ] ; rr:objectMap [ rr:column "country_code" ]; ] ;
rr:predicateObjectMap [ rr:predicateMap [ rr:constant oplcb:stateCode ] ; rr:objectMap [ rr:column "state_code" ]; ] ;
rr:predicateObjectMap [ rr:predicateMap [ rr:constant oplcb:region ] ; rr:objectMap [ rr:column "region" ]; ] ;
rr:predicateObjectMap [ rr:predicateMap [ rr:constant oplcb:city ] ; rr:objectMap [ rr:column "city" ]; ] ;
rr:predicateObjectMap [ rr:predicateMap [ rr:constant oplcb:address ] ; rr:objectMap [ rr:column "address" ]; ] ;
rr:predicateObjectMap [ rr:predicateMap [ rr:constant oplcb:postal_code ] ; rr:objectMap [ rr:column "postal_code" ]; ] ;
rr:predicateObjectMap [ rr:predicateMap [ rr:constant oplcb:status ] ; rr:objectMap [ rr:termType rr:IRI; rr:template "http://www.openlinksw.com/schemas/crunchbase#{status}" ]; ] ;
rr:predicateObjectMap [ rr:predicateMap [ rr:constant rdfs:comment] ; rr:objectMap [ rr:column "short_description" ]; ] ;
rr:predicateObjectMap [ rr:predicateMap [ rr:constant oplcb:category_list ] ; rr:objectMap [ rr:termType rr:IRI; rr:template "http://www.openlinksw.com/schemas/crunchbase#{category_list}" ]; ] ;
rr:predicateObjectMap [ rr:predicateMap [ rr:constant oplcb:category_groups_list ] ; rr:objectMap [ rr:termType rr:IRI; rr:template "http://www.openlinksw.com/schemas/crunchbase#{category_groups_list}" ]; ] ;
rr:predicateObjectMap [ rr:predicateMap [ rr:constant oplcb:hasTotalFundingRounds ] ; rr:objectMap [ rr:column "num_funding_rounds" ]; ] ;
rr:predicateObjectMap [ rr:predicateMap [ rr:constant oplcb:hasTotalMoneyRaised ] ; rr:objectMap [ rr:column "total_funding_usd" ]; ] ;
rr:predicateObjectMap [ rr:predicateMap [ rr:constant oplcb:hasValuationCurrencyCode ] ; rr:objectMap [ rr:column "total_funding_currency_code" ]; ] ;
rr:predicateObjectMap [ rr:predicateMap [ rr:constant oplcb:wasFoundedOn ] ; rr:objectMap [ rr:column "founded_on" ]; ] ;
rr:predicateObjectMap [ rr:predicateMap [ rr:constant oplcb:hasLastFundingDate ] ; rr:objectMap [ rr:column "last_funding_on" ]; ] ;
rr:predicateObjectMap [ rr:predicateMap [ rr:constant oplcb:closed_on ] ; rr:objectMap [ rr:column "closed_on" ]; ] ;
rr:predicateObjectMap [ rr:predicateMap [ rr:constant oplcb:hasEmployeeCount ] ; rr:objectMap [ rr:column "employee_count" ]; ] ;
rr:predicateObjectMap [ rr:predicateMap [ rr:constant oplcb:email ] ; rr:objectMap [ rr:column "email" ]; ] ;
rr:predicateObjectMap [ rr:predicateMap [ rr:constant oplcb:phone ] ; rr:objectMap [ rr:column "phone" ]; ] ;
rr:predicateObjectMap [ rr:predicateMap [ rr:constant oplcb:facebook_url ] ; rr:objectMap [ rr:termType rr:IRI; rr:column "facebook_url" ]; ] ;
rr:predicateObjectMap [ rr:predicateMap [ rr:constant oplcb:linkedin_url ] ; rr:objectMap [ rr:termType rr:IRI; rr:column "linkedin_url" ]; ] ;
rr:predicateObjectMap [ rr:predicateMap [ rr:constant oplcb:twitter_url ] ; rr:objectMap [ rr:termType rr:IRI; rr:column "twitter_url" ]; ] ;
rr:predicateObjectMap [ rr:predicateMap [ rr:constant oplcb:logo_url ] ; rr:objectMap [ rr:column "logo_url" ]; ] ;
rr:predicateObjectMap [ rr:predicateMap [ rr:constant oplcb:hasAlias ] ; rr:objectMap [ rr:column "alias1" ]; ] ;
rr:predicateObjectMap [ rr:predicateMap [ rr:constant oplcb:hasAlias ] ; rr:objectMap [ rr:column "alias2" ]; ] ;
rr:predicateObjectMap [ rr:predicateMap [ rr:constant oplcb:hasAlias ] ; rr:objectMap [ rr:column "alias3" ]; ] ;
rr:predicateObjectMap [ rr:predicateMap [ rr:constant rdf:type ] ; rr:objectMap [ rr:termType rr:IRI; rr:template "http://www.openlinksw.com/schemas/crunchbase#{primary_role}" ]; ] ;
rr:predicateObjectMap [ rr:predicateMap [ rr:constant oplcb:hasTotalExits ] ; rr:objectMap [ rr:column "num_exits" ]; ] ;
rr:predicateObjectMap [ rr:predicateMap [ rr:constant oplcb:hasRevenueRange ] ; rr:objectMap [ rr:column "revenue_range" ]; ] .

#people_description.csv
<#TriplesMappeople_descriptions> a rr:TriplesMap; rr:logicalTable [ rr:sqlQuery """SELECT *, uuid AS cb_uuid FROM crunchbase.demo.people_descriptions""" ]; 
rr:subjectMap [ rr:termType rr:IRI  ; rr:template "http://demo.openlinksw.com/crunchbase_demo/{type}/{cb_uuid}#this"; rr:class oplcb:Person; rr:graph <http://demo.openlinksw.com/crunchbase_demo2#> ];
rr:predicateObjectMap [ rr:predicateMap [ rr:constant rdfs:label ] ; rr:objectMap [ rr:column "name" ]; ] ;
rr:predicateObjectMap [ rr:predicateMap [ rr:constant oplcb:permalink ] ; rr:objectMap [ rr:column "permalink" ]; ] ;
rr:predicateObjectMap [ rr:predicateMap [ rr:constant schema:mainEntityOfPage ] ; rr:objectMap [ rr:termType rr:IRI; rr:template "cb_url" ]; ] ;
rr:predicateObjectMap [ rr:predicateMap [ rr:constant oplcb:hasRank ] ; rr:objectMap [ rr:column "rank" ]; ] ;
rr:predicateObjectMap [ rr:predicateMap [ rr:constant oplcb:createdAt ] ; rr:objectMap [ rr:column "created_at" ]; ] ;
rr:predicateObjectMap [ rr:predicateMap [ rr:constant oplcb:updatedAt ] ; rr:objectMap [ rr:column "updated_at" ]; ] ;
rr:predicateObjectMap [ rr:predicateMap [ rr:constant rdfs:comment ] ; rr:objectMap [ rr:column "description" ]; ] .

#people.csv
<#TriplesMappeople> a rr:TriplesMap; rr:logicalTable [ rr:sqlQuery """SELECT *, uuid AS cb_uuid FROM crunchbase.demo.people""" ]; 
rr:subjectMap [ rr:termType rr:IRI  ; rr:template "http://demo.openlinksw.com/crunchbase_demo/{type}/{cb_uuid}#this"; rr:class oplcb:Person; rr:graph <http://demo.openlinksw.com/crunchbase_demo2#> ];
rr:predicateObjectMap [ rr:predicateMap [ rr:constant rdfs:label ] ; rr:objectMap [ rr:column "name" ]; ] ;
rr:predicateObjectMap [ rr:predicateMap [ rr:constant schema:mainEntityOfPage ] ; rr:objectMap [ rr:termType rr:IRI; rr:template "cb_url" ]; ] ;
rr:predicateObjectMap [ rr:predicateMap [ rr:constant oplcb:hasRank ] ; rr:objectMap [ rr:column "rank" ]; ] ;
rr:predicateObjectMap [ rr:predicateMap [ rr:constant oplcb:createdAt ] ; rr:objectMap [ rr:column "created_at" ]; ] ;
rr:predicateObjectMap [ rr:predicateMap [ rr:constant oplcb:updatedAt ] ; rr:objectMap [ rr:column "updated_at" ]; ] ;
rr:predicateObjectMap [ rr:predicateMap [ rr:constant oplcb:hasFirstName ] ; rr:objectMap [ rr:column "first_name" ]; ] ;
rr:predicateObjectMap [ rr:predicateMap [ rr:constant oplcb:hasLastName ] ; rr:objectMap [ rr:column "last_name" ]; ] ;
rr:predicateObjectMap [ rr:predicateMap [ rr:constant oplcb:hasName ] ; rr:objectMap [ rr:template "{first_name} {last_name}" ]; ] ;
rr:predicateObjectMap [ rr:predicateMap [ rr:constant oplcb:hasGender ] ; rr:objectMap [ rr:column "gender" ]; ] ;
rr:predicateObjectMap [ rr:predicateMap [ rr:constant oplcb:hascountry_code ] ; rr:objectMap [ rr:column "country_code" ]; ] ;
rr:predicateObjectMap [ rr:predicateMap [ rr:constant oplcb:hasStateCode ] ; rr:objectMap [ rr:column "state_code" ]; ] ;
rr:predicateObjectMap [ rr:predicateMap [ rr:constant oplcb:hasRegion ] ; rr:objectMap [ rr:column "region" ]; ] ;
rr:predicateObjectMap [ rr:predicateMap [ rr:constant oplcb:hasCity ] ; rr:objectMap [ rr:column "city" ]; ] ;
rr:predicateObjectMap [ rr:predicateMap [ rr:constant oplcb:hasFeaturedJob] ; rr:objectMap [ rr:termType rr:IRI; rr:template "http://demo.openlinksw.com/crunchbase_demo/organization/{featured_job_organization_name}#this" ]; ] ;
rr:predicateObjectMap [ rr:predicateMap [ rr:constant oplcb:featured_job_organization_name ] ; rr:objectMap [ rr:column "featured_job_organization_name" ]; ] ;
rr:predicateObjectMap [ rr:predicateMap [ rr:constant oplcb:hasFacebookURL ] ; rr:objectMap [ rr:column "facebook_url" ]; ] ;
rr:predicateObjectMap [ rr:predicateMap [ rr:constant oplcb:hasLinkedinURL ] ; rr:objectMap [ rr:column "linkedin_url" ]; ] ;
rr:predicateObjectMap [ rr:predicateMap [ rr:constant oplcb:hasTwitterURL ] ; rr:objectMap [ rr:column "twitter_url" ]; ] ;
rr:predicateObjectMap [ rr:predicateMap [ rr:constant schema:logo ] ; rr:objectMap [ rr:column "logo_url" ]; ] .

<#TriplesMappeople_job> a rr:TriplesMap; rr:logicalTable [ rr:sqlQuery """SELECT *, uuid AS cb_uuid FROM crunchbase.demo.people""" ]; 
rr:subjectMap [ rr:termType rr:IRI  ; rr:template "http://demo.openlinksw.com/crunchbase_demo/job/{cb_uuid}#job"; rr:class oplcb:Job; rr:graph <http://demo.openlinksw.com/crunchbase_demo2#> ];
rr:predicateObjectMap [ rr:predicateMap [ rr:constant oplcb:hasJobOrganization ] ; rr:objectMap [ rr:termType rr:IRI; rr:template "http://demo.openlinksw.com/crunchbase_demo/organization/{featured_job_organization_uuid}" ]; ] ;
rr:predicateObjectMap [ rr:predicateMap [ rr:constant oplcb:hasJobTitle ] ; rr:objectMap [ rr:column "featured_job_title" ]; ] ;
rr:predicateObjectMap [ rr:predicateMap [ rr:constant rdfs:label ] ; rr:objectMap [ rr:template "{featured_job_title} @ {featured_job_organization_name}" ]; ] .

<#TriplesMappeople_job_organization> a rr:TriplesMap; rr:logicalTable [ rr:sqlQuery """SELECT *, uuid AS cb_uuid FROM crunchbase.demo.people""" ]; 
rr:subjectMap [ rr:termType rr:IRI  ; rr:template "http://demo.openlinksw.com/crunchbase_demo/organization/{featured_job_organization_uuid}#this"; rr:class oplcb:Organization; rr:graph <http://demo.openlinksw.com/crunchbase_demo2#> ];
rr:predicateObjectMap [ rr:predicateMap [ rr:constant rdfs:label ] ; rr:objectMap [ rr:column "featured_job_organization_name" ]; ] .

### Turtle End ###
